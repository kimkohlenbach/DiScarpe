@model DiScarpe.Models.Produto
@{
    if (Session["IdUsuario"] == null)
    {
        Response.Redirect("~/Home/Login");
    }
    //else
    //{
    //    if (Convert.ToInt32(Session["Administrador"]) == 1)
    //    {
    //        Response.Redirect("~/Home/Login");
    //    }
    //}

}
<a href="@Url.Action("LogOut","Home")">Sair</a>

@using (Html.BeginForm())
{
    HttpCookie userIdCookie = new HttpCookie("UserID");
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <p class="paginaTitulo">Adicionar novo Produto</p>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", id="cProduto" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdCategoria, "Categoria", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdCategoria", (IEnumerable<SelectListItem>)ViewBag.cat, htmlAttributes: new { @class = "form-control", id="dropCategoria" })
                @Html.ValidationMessageFor(model => model.IdCategoria, "", new { @class = "text-danger" })
                @Html.ActionLink("Adicionar", "Categoria", "Produto", new { id="adCategoria",  onClick="SaveElements()" })

            </div>
        </div>


        <div class="form-group">

            @Html.LabelFor(model => model.IdCor, "Cor", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdCor", (IEnumerable<SelectListItem>)ViewBag.color, htmlAttributes: new { @class = "form-control", id = "dropCor" })
                @Html.ValidationMessageFor(model => model.IdCor, "", new { @class = "text-danger" })
                @Html.ActionLink("Adicionar", "AdicionarCor", "Produto", new { id = "adCor", onClick = "SaveElements()" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.IdMarca, "Marca", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdMarca", (IEnumerable<SelectListItem>)ViewBag.marca, htmlAttributes: new { @class = "form-control", id="dropMarca"})
                @Html.ValidationMessageFor(model => model.IdMarca, "", new { @class = "text-danger" })
                @Html.ActionLink("Adicionar", "AdicionarMarca", "Produto", new { id="adMarca", onClick = "SaveElements()" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.IdEstilo, "Estilo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdEstilo", (IEnumerable<SelectListItem>)ViewBag.estilo, htmlAttributes: new { @class = "form-control", id="dropEstilo"})
                @Html.ValidationMessageFor(model => model.IdEstilo, "", new { @class = "text-danger" })
                @Html.ActionLink("Adicionar", "AdicionarEstilo", "Produto", new { id="adEstilo", onClick = "SaveElements()" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.IdTamanho, "Tamanho", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdTamanho", (IEnumerable<SelectListItem>)ViewBag.tamanho, htmlAttributes: new { @class = "form-control", id="dropTamanho" })
                @Html.ValidationMessageFor(model => model.IdTamanho, "", new { @class = "text-danger" })
                @Html.ActionLink("Adicionar", "AdicionarTamanho", "Produto", new { id = "adTamanho", onClick = "SaveElements()" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Cadastrar" class="btn btn-default" id="salvaProduto"  onClick="toCleanStorage()" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
    @Html.ActionLink("Cancelar", "Adicionar","Produto", new { id="cancelar", onClick="toCleanStorage()"})
</div>

